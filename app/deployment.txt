Deployment Steps for Terra

1. Connect to EC2 Instance

ssh -i "TerraKeyPair.pem" ubuntu@ec2-13-61-16-198.eu-north-1.compute.amazonaws.com

2. Transfer Application Files to Server

scp -i "TerraKeyPair.pem" -r /Users/vaishnavink/Desktop/expense-tracker/terra-app.zip ubuntu@ec2-13-61-16-198.eu-north-1.compute.amazonaws.com:~/

3. Backend Setup

cd app/backend
source venv/bin/activate
python3 run.py

Gunicorn Service Configuration

Create a service file at /etc/systemd/system/terra.service with the following content:

[Service]
User=ubuntu
Group=www-data
WorkingDirectory=/home/ubuntu/expense-tracker/app/backend
ExecStart=/home/ubuntu/expense-tracker/app/backend/venv/bin/gunicorn --bind 0.0.0.0:8000 \
    --access-logfile /home/ubuntu/app/backend/logs/gunicorn_access.log \
    --error-logfile /home/ubuntu/app/backend/logs/gunicorn_error.log run:app
Restart=always
StandardOutput=append:/home/ubuntu/app/backend/logs/systemd_output.log
StandardError=append:/home/ubuntu/app/backend/logs/systemd_error.log

[Install]
WantedBy=multi-user.target

Start Gunicorn Service

sudo systemctl daemon-reload
sudo systemctl start terra
sudo systemctl enable terra

4. Nginx Setup

Configuration File for Nginx

Edit /etc/nginx/sites-available/default and add:

upstream terra{
    server 127.0.0.1:8000;
}       
location / {
    proxy_pass http://terra;
}    

Restart Nginx

sudo systemctl enable nginx
sudo systemctl restart nginx

5. Verify Server Setup

Check Gunicorn

ss -tlnp | grep gunicorn
curl -I http://127.0.0.1:8000

Expected response:

HTTP/1.1 200 OK

If not, Gunicorn isn't serving requests.

Check Nginx Forwarding

curl -I http://51.21.248.80/

Expected response:

HTTP/1.1 200 OK

Test API Requests

curl -X POST http://51.20.190.45:5000/api/ -H "Content-Type: application/json" -d '{"username": "test_user"}'
curl -X POST http://127.0.0.1:8000/ -H "Content-Type: application/json" -d '{"username": "test_user"}'

6. Frontend Deployment

cd frontend
npm install
npm run dev
npm run dev -- --host

Build and Deploy Frontend

npm run build
sudo cp -r dist/* /var/www/frontend/
sudo systemctl restart nginx

7. Verify Frontend

curl ifconfig.me
http://13.61.16.198:5173/
http://13.51.13.44:5173/
http://51.20.250.10:5173/

8. MySQL Setup

Install MySQL Server

sudo apt install mysql-server -y
sudo mysql_secure_installation
sudo systemctl restart mysql

Configure Database and User

CREATE USER 'vnk'@'%' IDENTIFIED BY 'Yshoo29*';
CREATE DATABASE expense_management;
GRANT ALL PRIVILEGES ON expense_management.* TO 'vnk'@'%' WITH GRANT OPTION;
FLUSH PRIVILEGES;

9. Additional Notes

Local Machine IP: 49.207.233.73

API Endpoint Test:

Grafana changes - 
.ini 
auth changes - embedding

uploads folder
